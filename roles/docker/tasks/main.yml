---
# Describe here all your required system and middleware installation tasks

- name: Install Docker dependencies
  apt:
    pkg: 
      - ca-certificates
      - curl
      - gnupg
    state: latest
    update_cache: yes

# - name: Add Docker GPG apt key
#   apt_key:
#     url: https://download.docker.com/linux/ubuntu/gpg
#     state: present

- name: Download Docker gpg key
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /usr/share/keyrings/docker-archive-keyring.gpg_armored
    #checksum: sha256:1500c1f56fa9e26b9b8f42452a553675796ade0807cdce11975eb98170b3a570 # curl -sL https://download.docker.com/linux/ubuntu/gpg|sha256sum

- name: De-Armor Docker GPG key
  command:  gpg --dearmor < /usr/share/keyrings/docker-archive-keyring.gpg_armored > /usr/share/keyrings/docker-archive-keyring.gpg
  no_log: true
  args:
    creates: /usr/share/keyrings/docker-archive-keyring.gpg

# - name: Add Docker repository for {{ ansible_distribution_release }}
#   apt_repository:
#     repo: deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
#     state: present

- name: "Add Docker's repository to APT sources list"
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release | lower }} stable"
    state: present

- name: Update apt and install Docker packages
  apt:
    pkg: 
      - docker-ce
      - docker-ce-cli 
      - containerd.io 
      - docker-compose
    state: latest
    update_cache: true

- name: Make sure that docker was started and enabled
  service:
    name: docker
    state: started
    enabled: yes

- name: Ensure group docker exists
  group:
    name: docker
    state: present

- name: Creating docker folder in {{ docker__path }}
  file:
    path: "{{ docker__path }}/"
    state: directory
    mode: 0755

- name: Configure Docker daemon
  copy:
    src: "etc/docker/daemon.json"
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0644

- name: Add user {{ ansible_env.SUDO_USER | default(ansible_env.USER) }} to docker group
  user:
    name: "{{ ansible_env.SUDO_USER | default(ansible_env.USER) }}"
    groups: docker
    append: yes
  when: ansible_env.SUDO_USER is defined or ansible_env.USER is defined

- name: Restart service docker
  service:
    name: docker
    state: restarted
